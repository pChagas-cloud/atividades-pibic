model = keras.Sequential([
    keras.layers.Conv2D(32, (5,5), activation='relu', padding='same', input_shape=(28, 28,1)),
    keras.layers.Conv2D(64, (5,5), activation='relu', padding='same'),
    keras.layers.MaxPooling2D(pool_size=(2,2)),
    keras.layers.Dropout(0.25),
    keras.layers.Flatten(),
    keras.layers.Dense(128, activation='relu'),
    keras.layers.Dropout(0.5),
    keras.layers.Dense(10,activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

learning_rate_reduction = keras.callbacks.ReduceLROnPlateau(monitor='val_acc', 
                                            patience=3, 
                                            verbose=1, 
                                            factor=0.5, 
                                            min_lr=0.00001)

history = model.fit(X_train,
                   y_train,
                   batch_size = 32,
                   epochs = 10,
                   verbose = 1,
                   callbacks=[learning_rate_reduction])

